        function initLayout() {
            const viewportWidth = window.innerWidth;
            const viewportHeight = window.innerHeight;

            // 增加基础半径比例
            const baseRadius = Math.min(viewportWidth, viewportHeight) * 0.3; // 从0.2改为0.3

            // 优化布局坐标（更对称的六边形布局）
            const positions = [
                [0, 0],         // 中心
                [1, 0.2],       // 右偏上
                [-1, 0.2],      // 左偏上
                [-0.6, -0.9],   // 左下
                [0.6, -0.9]     // 右下
            ];

            state.nodes.forEach((node, index) => {
                if (!positions[index]) return;

                const [dx, dy] = positions[index];

                // 根据屏幕比例动态调整
                const aspectRatio = viewportWidth / viewportHeight;
                const xOffset = dx * baseRadius * (aspectRatio > 1 ? 1.1 : 1);
                const yOffset = dy * baseRadius * (aspectRatio > 1 ? 0.9 : 1);

                const x = viewportWidth / 2 + xOffset;
                const y = viewportHeight / 2 + yOffset;

                // 添加调试信息
                console.log(`节点${index}坐标：`, x, y);

                Object.assign(node.style, {
                    left: `${x}px`,
                    top: `${y}px`,
                    transition: state.dragging ? 'none' : 'all 0.6s cubic-bezier(0.34, 1.56, 0.64, 1)'
                });
            });
        }
